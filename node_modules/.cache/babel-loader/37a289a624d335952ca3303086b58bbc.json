{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkim/GA/project-2/Movie-Application/src/Components/Movies.js\";\nimport React, { Component } from 'react';\nimport { api } from './Services/ApiConfig';\nimport { MovieCard } from './Shared/MovieCard.js';\nexport default class Movies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMovies = async () => {\n      try {\n        const movies = await api.get('/allMovies');\n        this.setState({\n          movies: movies.data\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.renderMovies = () => {\n      if (this.state.movies.length) {\n        this.state.movies.map(movie => {\n          console.log('movie', movie.Title);\n          return React.createElement(MovieCard, {\n            key: movie.id,\n            movie: movie,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  render() {\n    console.log('state movies', this.state.movies);\n\n    if (this.state.movies.length) {\n      this.state.movies.map(movie => {\n        console.log('movie', movie.Title);\n        return React.createElement(MovieCard, {\n          key: movie.id,\n          movie: movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewkim/GA/project-2/Movie-Application/src/Components/Movies.js"],"names":["React","Component","api","MovieCard","Movies","constructor","props","fetchMovies","movies","get","setState","data","error","console","renderMovies","state","length","map","movie","log","Title","id","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUL,YAAY;AACtB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,YAAR,CAArB;AACA,aAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAEA,MAAM,CAACG;AADL,SAAd;AAGH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,KAnBkB;;AAAA,SAqBnBE,YArBmB,GAqBJ,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWP,MAAX,CAAkBQ,MAAtB,EAA8B;AAC1B,aAAKD,KAAL,CAAWP,MAAX,CAAkBS,GAAlB,CAAuBC,KAAD,IAAW;AAC7BL,UAAAA,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqBD,KAAK,CAACE,KAA3B;AACA,iBACI,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEF,KAAK,CAACG,EAAtB;AAA0B,YAAA,KAAK,EAAEH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,SALD;AAMH;AACJ,KA9BkB;;AAEf,SAAKH,KAAL,GAAa;AACTP,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AACDc,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL;AACH;;AAwBDgB,EAAAA,MAAM,GAAG;AACLV,IAAAA,OAAO,CAACM,GAAR,CAAY,cAAZ,EAA2B,KAAKJ,KAAL,CAAWP,MAAtC;;AAEA,QAAI,KAAKO,KAAL,CAAWP,MAAX,CAAkBQ,MAAtB,EAA8B;AAC1B,WAAKD,KAAL,CAAWP,MAAX,CAAkBS,GAAlB,CAAuBC,KAAD,IAAW;AAC7BL,QAAAA,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqBD,KAAK,CAACE,KAA3B;AACA,eACI,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEF,KAAK,CAACG,EAAtB;AAA0B,UAAA,KAAK,EAAEH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OALD;AAMH;AACJ;;AA5CyC","sourcesContent":["import React, { Component } from 'react'\nimport { api } from './Services/ApiConfig'\nimport { MovieCard } from './Shared/MovieCard.js'\n\nexport default class Movies extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: []\n        }\n    }\n    componentDidMount() {\n        this.fetchMovies()\n    }\n\n    fetchMovies = async () => {\n        try {\n            const movies = await api.get('/allMovies')\n            this.setState({\n                movies: movies.data\n            })\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    renderMovies = () => {\n        if (this.state.movies.length) {\n            this.state.movies.map((movie) => {\n                console.log('movie', movie.Title)\n                return (\n                    <MovieCard key={movie.id} movie={movie} />\n                )\n            })\n        }\n    }\n\n    render() {\n        console.log('state movies',this.state.movies)\n        \n        if (this.state.movies.length) {\n            this.state.movies.map((movie) => {\n                console.log('movie', movie.Title)\n                return (\n                    <MovieCard key={movie.id} movie={movie} />\n                )\n            })\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}