{"ast":null,"code":"import _defineProperty from \"/Users/andrewkim/GA/project-2real/Movie-Application/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andrewkim/GA/project-2real/Movie-Application/src/Components/Movies.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { mockApi } from './Services/mockApi';\nimport { MovieCard } from './shared/MovieCard.js'; // import { Button } from './Shared/Button.js'\n\nexport default class Movies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMovies = async () => {\n      try {\n        const movies = await mockApi.get('/allMovies');\n        this.setState({\n          movies: movies.data\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleDeleteMovies = async id => {\n      console.log(id);\n      await mockApi.delete(\"./allMovies/\".concat(id)).then(() => {\n        const allMovies = this.state.movies;\n        allMovies.splice(this.state.movieToDelete.index, 1);\n        this.setState({\n          movies: allMovies\n        });\n      }).then(() => {\n        this.fetchMovies();\n      }).catch(err => console.error(err));\n    };\n\n    this.handleOpenModal = (movie, index) => this.setState({\n      toDelete: true,\n      movieToDelete: _objectSpread({}, movie, {\n        index\n      })\n    });\n\n    this.handleCloseModal = () => this.setState({\n      toDelete: false,\n      movieToDelete: {}\n    });\n\n    this.state = {\n      movies: [],\n      movieToDelete: {},\n      toDelete: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  render() {\n    return this.state.movies.map(movie => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(MovieCard, {\n        key: movie.id,\n        movie: movie,\n        deleteFn: this.handleDeleteMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewkim/GA/project-2real/Movie-Application/src/Components/Movies.js"],"names":["React","Component","mockApi","MovieCard","Movies","constructor","props","fetchMovies","movies","get","setState","data","error","console","handleDeleteMovies","id","log","delete","then","allMovies","state","splice","movieToDelete","index","catch","err","handleOpenModal","movie","toDelete","handleCloseModal","componentDidMount","render","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B,C,CACA;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,WAZmB,GAYL,YAAY;AACtB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAY,YAAZ,CAArB;AACA,aAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAEA,MAAM,CAACG;AADL,SAAd;AAGH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,KArBkB;;AAAA,SAuBnBE,kBAvBmB,GAuBE,MAAOC,EAAP,IAAc;AAC/BF,MAAAA,OAAO,CAACG,GAAR,CAAYD,EAAZ;AACA,YAAMb,OAAO,CAACe,MAAR,uBAA8BF,EAA9B,GAAoCG,IAApC,CAAyC,MAAM;AACjD,cAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWZ,MAA7B;AACAW,QAAAA,SAAS,CAACE,MAAV,CAAiB,KAAKD,KAAL,CAAWE,aAAX,CAAyBC,KAA1C,EAAiD,CAAjD;AACA,aAAKb,QAAL,CAAc;AAACF,UAAAA,MAAM,EAAEW;AAAT,SAAd;AAEH,OALK,EAMLD,IANK,CAMA,MAAI;AACN,aAAKX,WAAL;AACH,OARK,EASLiB,KATK,CASEC,GAAD,IAASZ,OAAO,CAACD,KAAR,CAAca,GAAd,CATV,CAAN;AAUH,KAnCkB;;AAAA,SAqCnBC,eArCmB,GAqCD,CAACC,KAAD,EAAQJ,KAAR,KAClB,KAAKb,QAAL,CAAc;AAAEkB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBN,MAAAA,aAAa,oBAAMK,KAAN;AAAaJ,QAAAA;AAAb;AAA/B,KAAd,CAtCmB;;AAAA,SAwCnBM,gBAxCmB,GAwCA,MAAM,KAAKnB,QAAL,CAAc;AAAEkB,MAAAA,QAAQ,EAAE,KAAZ;AAAmBN,MAAAA,aAAa,EAAE;AAAlC,KAAd,CAxCN;;AAEf,SAAKF,KAAL,GAAa;AACTZ,MAAAA,MAAM,EAAE,EADC;AAETc,MAAAA,aAAa,EAAE,EAFN;AAGTM,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKvB,WAAL;AACH;;AAgCDwB,EAAAA,MAAM,GAAG;AACL,WACI,KAAKX,KAAL,CAAWZ,MAAX,CAAkBwB,GAAlB,CAAsBL,KAAK,IAAI;AAC3B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAK,CAACZ,EAAtB;AAA0B,QAAA,KAAK,EAAEY,KAAjC;AAAwC,QAAA,QAAQ,EAAE,KAAKb,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAWH,KAZD,CADJ;AAeH;;AA3DyC","sourcesContent":["import React, { Component } from 'react'\nimport { mockApi } from './Services/mockApi'\nimport { MovieCard } from './shared/MovieCard.js'\n// import { Button } from './Shared/Button.js'\n\nexport default class Movies extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: [],\n            movieToDelete: {},\n            toDelete: false,\n        }\n    }\n    componentDidMount() {\n        this.fetchMovies()\n    }\n\n    fetchMovies = async () => {\n        try {\n            const movies = await mockApi.get('/allMovies')\n            this.setState({\n                movies: movies.data\n            })\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    handleDeleteMovies = async (id) => {\n        console.log(id)\n        await mockApi.delete(`./allMovies/${id}`).then(() => {\n            const allMovies = this.state.movies\n            allMovies.splice(this.state.movieToDelete.index, 1);\n            this.setState({movies: allMovies})\n            \n        })\n        .then(()=>{\n            this.fetchMovies()\n        })\n        .catch((err) => console.error(err))\n    }\n    \n    handleOpenModal = (movie, index) =>\n    this.setState({ toDelete: true, movieToDelete: {...movie, index}})\n    \n    handleCloseModal = () => this.setState({ toDelete: false, movieToDelete: {} })\n\n    render() {\n        return (\n            this.state.movies.map(movie => {\n                return (\n                    <div>\n                    <MovieCard key={movie.id} movie={movie} deleteFn={this.handleDeleteMovies}>\n                        \n                    </MovieCard>\n                    </div>\n                    \n                    \n                    \n                        \n                )\n            })\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}