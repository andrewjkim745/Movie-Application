{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkim/GA/project-2/Movie-Application/src/Components/Movies.js\";\nimport React, { Component } from 'react';\nimport { api } from './Services/ApiConfig';\nimport { MovieCard } from './Shared/MovieCard.js';\nexport default class Movies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMovies = async () => {\n      try {\n        const movies = await api.get('/allMovies');\n        this.setState({\n          movies: movies.data\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleDeleteMovies = () => {\n      api.delete(\"./allMovies\".concat(this.state.movieToDelete.id)).then(() => {\n        const allMovies = this.state.movies;\n        allMovies.splice(this.state.movieToDelete.index, 1);\n        this.setState({\n          movies: allMovies\n        });\n      }).then(() => this.handleCloseMovie()).catch(err => console.error(err));\n    };\n\n    this.handleOpenModal = (movie, index) => this.setState({\n      toDelete: true,\n      movie\n    });\n\n    this.state = {\n      movies: [],\n      movieToDelete: {},\n      toDelete: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  render() {\n    return this.state.movies.map(movie => {\n      return React.createElement(MovieCard, {\n        key: movie.id,\n        movie: movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewkim/GA/project-2/Movie-Application/src/Components/Movies.js"],"names":["React","Component","api","MovieCard","Movies","constructor","props","fetchMovies","movies","get","setState","data","error","console","handleDeleteMovies","delete","state","movieToDelete","id","then","allMovies","splice","index","handleCloseMovie","catch","err","handleOpenModal","movie","toDelete","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,WAZmB,GAYL,YAAY;AACtB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,YAAR,CAArB;AACA,aAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAEA,MAAM,CAACG;AADL,SAAd;AAGH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,KArBkB;;AAAA,SAuBnBE,kBAvBmB,GAuBE,MAAM;AACvBZ,MAAAA,GAAG,CAACa,MAAJ,sBAAyB,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,EAAlD,GAAwDC,IAAxD,CAA6D,MAAM;AAC/D,cAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWR,MAA7B;AACAY,QAAAA,SAAS,CAACC,MAAV,CAAiB,KAAKL,KAAL,CAAWC,aAAX,CAAyBK,KAA1C,EAAiD,CAAjD;AACA,aAAKZ,QAAL,CAAc;AAACF,UAAAA,MAAM,EAAEY;AAAT,SAAd;AACH,OAJD,EAIGD,IAJH,CAIQ,MAAK,KAAKI,gBAAL,EAJb,EAKCC,KALD,CAKQC,GAAD,IAASZ,OAAO,CAACD,KAAR,CAAca,GAAd,CALhB;AAMH,KA9BkB;;AAAA,SAgCnBC,eAhCmB,GAgCD,CAACC,KAAD,EAAQL,KAAR,KAClB,KAAKZ,QAAL,CAAc;AAAEkB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBD,MAAAA;AAAlB,KAAd,CAjCmB;;AAEf,SAAKX,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAE,EADC;AAETS,MAAAA,aAAa,EAAE,EAFN;AAGTW,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKtB,WAAL;AACH;;AAyBDuB,EAAAA,MAAM,GAAG;AACL,WACI,KAAKd,KAAL,CAAWR,MAAX,CAAkBuB,GAAlB,CAAsBJ,KAAK,IAAI;AAC3B,aACI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAK,CAACT,EAAtB;AAA0B,QAAA,KAAK,EAAES,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,CADJ;AAOH;;AA5CyC","sourcesContent":["import React, { Component } from 'react'\nimport { api } from './Services/ApiConfig'\nimport { MovieCard } from './Shared/MovieCard.js'\n\nexport default class Movies extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: [],\n            movieToDelete: {},\n            toDelete: false,\n        }\n    }\n    componentDidMount() {\n        this.fetchMovies()\n    }\n\n    fetchMovies = async () => {\n        try {\n            const movies = await api.get('/allMovies')\n            this.setState({\n                movies: movies.data\n            })\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    handleDeleteMovies = () => {\n        api.delete(`./allMovies${this.state.movieToDelete.id}`).then(() => {\n            const allMovies = this.state.movies\n            allMovies.splice(this.state.movieToDelete.index, 1);\n            this.setState({movies: allMovies})\n        }).then(()=> this.handleCloseMovie())\n        .catch((err) => console.error(err))\n    }\n    \n    handleOpenModal = (movie, index) =>\n    this.setState({ toDelete: true, movie})\n\n    render() {\n        return (\n            this.state.movies.map(movie => {\n                return (\n                    <MovieCard key={movie.id} movie={movie} />\n                )\n            })\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}